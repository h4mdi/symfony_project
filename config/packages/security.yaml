security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users:
            entity:
                    # the class of the entity that represents users
                class: 'App\Entity\User'
                    # the property to query by - e.g. email, username, etc
                property: 'email'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            access_denied_url: /login
            lazy: true
            custom_authenticator: App\Security\AppAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: app_login
            #provider: users_in_memory



            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/pfe, roles: ROLE_USER }
         - { path: ^/f, roles: ROLE_ADMIN }
         - { path: ^/emploi, roles: ROLE_USER }
         - { path: ^/etudIng, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
